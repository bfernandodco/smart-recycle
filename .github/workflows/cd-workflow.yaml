name: Continuous Delivery - Aplicando TÃ©cnicas de DevOps

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to container registry
        uses: docker/login-action@v2
        with:
          registry: https://index.docker.io/v1/
          username: ${{ secrets.AzureAppService_ContainerUsername_1fcb5775246e4560b18e7367c83ceb21 }}
          password: ${{ secrets.AzureAppService_ContainerPassword_11d7a0ad8c4c48ec901ea0b7406c4336 }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: index.docker.io/${{ secrets.AzureAppService_ContainerUsername_1fcb5775246e4560b18e7367c83ceb21 }}/docker.io/bfernandodco/appweb-smart-recycle-dev:${{ github.sha }}
          file: ./Dockerfile

    deploy:
      runs-on: ubuntu-latest
      needs: build
      environment:
        name: 'Production'
        url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

      steps:
        - name: Deploy to Azure Web App
          id: deploy-to-webapp
          uses: azure/webapps-deploy@v2
          with:
            app-name: 'appweb-smart-recycle-dev'
            slot-name: 'Production'
            publish-profile: ${{ secrets.AzureAppService_PublishProfile_548a034c989b4c33a799260430f59f92 }}
            images: 'index.docker.io/${{ secrets.AzureAppService_ContainerUsername_1fcb5775246e4560b18e7367c83ceb21 }}/docker.io/bfernandodco/appweb-smart-recycle-dev:${{ github.sha }}'