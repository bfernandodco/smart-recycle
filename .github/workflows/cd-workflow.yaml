name: Continuous Delivery - Aplicando TÃ©cnicas de DevOps

on:
  push:
    branches:
      - develop

env:
  IMAGE_NAME: appweb-smart-recycle-dev
  AZURE_WEBAPP_NAME: appweb-smart-recycle-dev

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Java SDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image to GHCR
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set environment variables for Web App
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_PROFILE }}
          app-settings-json: |
            [
              {
                "name": "MONGODB_URI",
                "value": "${{ secrets.MONGODB_URI }}",
                "slotSetting": false
              },
              {
                "name": "JSON_WEB_TOKEN_SECRET",
                "value": "${{ secrets.JSON_WEB_TOKEN_SECRET }}",
                "slotSetting": false
              }
            ]

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_PROFILE }}
          images: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
